{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../config\";\nexport const callApi = (endpoint, method, token, payload) => {\n  const authHeaders = token ? {\n    Authorization: `Bearer ${token}`\n  } : {};\n  const configaxios = {\n    method,\n    url: `${config.API_URI}/${endpoint}`,\n    body: JSON.stringify(payload),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n      ...authHeaders\n    }\n  };\n  return new Promise((resolve, reject) => {\n    axios(configaxios).then(res => {\n      resolve(res.data);\n    }).catch(error => {\n      reject(error);\n    });\n  });\n};","map":{"version":3,"sources":["/home/inayat/rns-project/generic_api_axios_module/src/utils/call-api.js"],"names":["axios","config","callApi","endpoint","method","token","payload","authHeaders","Authorization","configaxios","url","API_URI","body","JSON","stringify","headers","Accept","Promise","resolve","reject","then","res","data","catch","error"],"mappings":"AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,MAAX,EAAmBC,KAAnB,EAA0BC,OAA1B,KAAsC;AAEzD,QAAMC,WAAW,GAAGF,KAAK,GACnB;AACEG,IAAAA,aAAa,EAAG,UAASH,KAAM;AADjC,GADmB,GAInB,EAJN;AAMA,QAAMI,WAAW,GAAG;AAChBL,IAAAA,MADgB;AAEhBM,IAAAA,GAAG,EAAG,GAAET,MAAM,CAACU,OAAQ,IAAGR,QAAS,EAFnB;AAGhBS,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeR,OAAf,CAHU;AAIhBS,IAAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAE,kBADH;AAEL,sBAAgB,kBAFX;AAGL,SAAGT;AAHE;AAJO,GAApB;AAWA,SAAO,IAAIU,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCnB,IAAAA,KAAK,CAACS,WAAD,CAAL,CAAmBW,IAAnB,CAAyBC,GAAD,IAAS;AAC7BH,MAAAA,OAAO,CAACG,GAAG,CAACC,IAAL,CAAP;AACH,KAFD,EAEGC,KAFH,CAEUC,KAAD,IAAW;AAChBL,MAAAA,MAAM,CAACK,KAAD,CAAN;AACH,KAJD;AAKH,GANM,CAAP;AAQH,CA3BM","sourcesContent":["\nimport axios from \"axios\"\nimport config from \"../config\"\n\nexport const callApi = (endpoint, method, token, payload) => {\n\n    const authHeaders = token\n        ? {\n            Authorization: `Bearer ${token}`,\n        }\n        : {};\n\n    const configaxios = {\n        method,\n        url: `${config.API_URI}/${endpoint}`,\n        body: JSON.stringify(payload),\n        headers: {\n            Accept: 'application/json',\n            'Content-Type': 'application/json',\n            ...authHeaders,\n        }\n    }\n\n    return new Promise((resolve, reject) => {\n        axios(configaxios).then((res) => {\n            resolve(res.data);\n        }).catch((error) => {\n            reject(error);\n        })\n    })\n\n}"]},"metadata":{},"sourceType":"module"}